{"version":3,"sources":["webpack:///./src/routes/Counter/containers/CounterContainer.js","webpack:///./src/routes/Counter/modules/counter.js","webpack:///./src/routes/Counter/components/Counter.js"],"names":["mapDispatchToProps","increment","doubleAsync","mapStateToProps","state","counter","counterReducer","COUNTER_INCREMENT","COUNTER_DOUBLE_ASYNC","value","type","payload","dispatch","getState","resolve","setTimeout","actions","ACTION_HANDLERS","action","initialState","handler","Counter","props","margin","propTypes","PropTypes","number","isRequired","func"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;AAEA,KAAMA,qBAAqB;AACzBC,cAAY;AAAA,YAAM,wBAAU,CAAV,CAAN;AAAA,IADa;AAEzBC;AAFyB,EAA3B;;AAKA,KAAMC,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD;AAAA,UAAY;AAClCC,cAAUD,MAAMC;AADkB,IAAZ;AAAA,EAAxB;;mBAIe,yBAAQF,eAAR,EAAyBH,kBAAzB,oB;;;;;;;;;;;;;;;;;;;;;;;;SCLCC,S,GAAAA,S;mBA0CQK,c;;;;AAnDxB;AACA;AACA;AACO,KAAMC,gDAAoB,mBAA1B;AACA,KAAMC,sDAAuB,sBAA7B;;AAEP;AACA;AACA;AACO,UAASP,SAAT,GAA+B;AAAA,OAAXQ,KAAW,uEAAH,CAAG;;AACpC,UAAO;AACLC,WAAUH,iBADL;AAELI,cAAUF;AAFL,IAAP;AAID;;AAED;;;;AAIO,KAAMP,oCAAc,SAAdA,WAAc,GAAM;AAC/B,UAAO,UAACU,QAAD,EAAWC,QAAX,EAAwB;AAC7B,YAAO,sBAAY,UAACC,OAAD,EAAa;AAC9BC,kBAAW,YAAM;AACfH,kBAAS;AACPF,iBAAUF,oBADH;AAEPG,oBAAUE,WAAWR;AAFd,UAAT;AAIAS;AACD,QAND,EAMG,GANH;AAOD,MARM,CAAP;AASD,IAVD;AAWD,EAZM;;AAcA,KAAME,4BAAU;AACrBf,uBADqB;AAErBC;;AAGF;AACA;AACA;AAPuB,EAAhB,CAQP,IAAMe,0FACHV,iBADG,EACqB,UAACH,KAAD,EAAQc,MAAR;AAAA,UAAmBd,QAAQc,OAAOP,OAAlC;AAAA,EADrB,mDAEHH,oBAFG,EAEqB,UAACJ,KAAD,EAAQc,MAAR;AAAA,UAAmBd,QAAQ,CAA3B;AAAA,EAFrB,oBAAN;;AAKA;AACA;AACA;AACA,KAAMe,eAAe,CAArB;AACe,UAASb,cAAT,GAAuD;AAAA,OAA9BF,KAA8B,uEAAtBe,YAAsB;AAAA,OAARD,MAAQ;;AACpE,OAAME,UAAUH,gBAAgBC,OAAOR,IAAvB,CAAhB;;AAEA,UAAOU,UAAUA,QAAQhB,KAAR,EAAec,MAAf,CAAV,GAAmCd,KAA1C;AACD,E;;;;;;;;;;;;;;ACvDD;;;;;;AAEO,KAAMiB,4BAAU,SAAVA,OAAU,CAACC,KAAD;AAAA,UACrB;AAAA;AAAA,OAAK,OAAO,EAAEC,QAAQ,QAAV,EAAZ;AACE;AAAA;AAAA;AAAA;AAAcD,aAAMjB;AAApB,MADF;AAEE;AAAA;AAAA,SAAQ,WAAU,iBAAlB,EAAoC,SAASiB,MAAMrB,SAAnD;AAAA;AAAA,MAFF;AAKG,QALH;AAME;AAAA;AAAA,SAAQ,WAAU,iBAAlB,EAAoC,SAASqB,MAAMpB,WAAnD;AAAA;AAAA;AANF,IADqB;AAAA,EAAhB;;AAaPmB,SAAQG,SAAR,GAAoB;AAClBnB,YAAc,gBAAMoB,SAAN,CAAgBC,MAAhB,CAAuBC,UADnB;AAElBzB,gBAAc,gBAAMuB,SAAN,CAAgBG,IAAhB,CAAqBD,UAFjB;AAGlB1B,cAAc,gBAAMwB,SAAN,CAAgBG,IAAhB,CAAqBD;AAHjB,EAApB;;mBAMeN,O","file":"2.counter.6ffab14af60a2181d368.js","sourcesContent":["import { connect } from 'react-redux'\nimport { increment, doubleAsync } from '../modules/counter'\n\nimport Counter from '../components/Counter'\n\nconst mapDispatchToProps = {\n  increment : () => increment(1),\n  doubleAsync\n}\n\nconst mapStateToProps = (state) => ({\n  counter : state.counter\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter)\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/Counter/containers/CounterContainer.js","// ------------------------------------\n// Constants\n// ------------------------------------\nexport const COUNTER_INCREMENT = 'COUNTER_INCREMENT'\nexport const COUNTER_DOUBLE_ASYNC = 'COUNTER_DOUBLE_ASYNC'\n\n// ------------------------------------\n// Actions\n// ------------------------------------\nexport function increment (value = 1) {\n  return {\n    type    : COUNTER_INCREMENT,\n    payload : value\n  }\n}\n\n/*  This is a thunk, meaning it is a function that immediately\n    returns a function for lazy evaluation. It is incredibly useful for\n    creating async actions, especially when combined with redux-thunk! */\n\nexport const doubleAsync = () => {\n  return (dispatch, getState) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        dispatch({\n          type    : COUNTER_DOUBLE_ASYNC,\n          payload : getState().counter\n        })\n        resolve()\n      }, 200)\n    })\n  }\n}\n\nexport const actions = {\n  increment,\n  doubleAsync\n}\n\n// ------------------------------------\n// Action Handlers\n// ------------------------------------\nconst ACTION_HANDLERS = {\n  [COUNTER_INCREMENT]    : (state, action) => state + action.payload,\n  [COUNTER_DOUBLE_ASYNC] : (state, action) => state * 2\n}\n\n// ------------------------------------\n// Reducer\n// ------------------------------------\nconst initialState = 0\nexport default function counterReducer (state = initialState, action) {\n  const handler = ACTION_HANDLERS[action.type]\n\n  return handler ? handler(state, action) : state\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/Counter/modules/counter.js","import React from 'react'\n\nexport const Counter = (props) => (\n  <div style={{ margin: '0 auto' }} >\n    <h2>Counter: {props.counter}</h2>\n    <button className='btn btn-default' onClick={props.increment}>\n      Increment\n    </button>\n    {' '}\n    <button className='btn btn-default' onClick={props.doubleAsync}>\n      Double (Async)\n    </button>\n  </div>\n)\n\nCounter.propTypes = {\n  counter     : React.PropTypes.number.isRequired,\n  doubleAsync : React.PropTypes.func.isRequired,\n  increment   : React.PropTypes.func.isRequired\n}\n\nexport default Counter\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/Counter/components/Counter.js"],"sourceRoot":""}